@model CxC_Seminario.DO.Usuario
@using CxC_Seminario.DO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    @{
        IEnumerable<TipoUsuario> tipoUsuarios = ViewData["TipoUsuarios"] as IEnumerable<TipoUsuario>;
        IEnumerable<Iglesia> iglesias = ViewData["Iglesias"] as IEnumerable<Iglesia>;
        IEnumerable<MetodoPago> metodoPagos = ViewData["MetodoPagos"] as IEnumerable<MetodoPago>;
        IEnumerable<Carrera> carreras = ViewData["Carreras"] as IEnumerable<Carrera>;
        IEnumerable<Persona> personas = ViewData["Personas"] as IEnumerable<Persona>;
    }


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Usuario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Cedula, "cedula", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cedula", new SelectList(personas, "cedula", "Nombre"), "Seleciona a quien desea crear usuario", htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Usuario1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Usuario1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contrasena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contrasena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contrasena, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.IdTipoUsuario, "idTipoUsuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("idTipoUsuario", new SelectList(tipoUsuarios, "idTipoUsuario", "Nombre"), "Seleciona un Tipo de Usuario", htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.IdTipoUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdIglesia, "idIglesia", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idIglesia", new SelectList(iglesias, "idIglesia", "Nombre"), "Seleciona una Iglesia", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdIglesia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdMetodoPago, "idMetodoPago", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idMetodoPago", new SelectList(metodoPagos, "idMetodoPago", "Nombre"), "Seleciona un Metodo de Pago", htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.IdMetodoPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCarrera, "idCarrera", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idCarrera", new SelectList(carreras, "idCarrera", "Nombre"), "Seleciona una Carrera", htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.IdCarrera, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
